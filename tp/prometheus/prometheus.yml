global:
  scrape_interval:     15s # Par défaut prometheus va scrapper les cibles toutes les 15 secondes

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
    env: 'infrastructure'   # C'est simplement le nom de votre environnement

# spécification du serveur alertmanager

alerting:
  alertmanagers:
  - static_configs:
    - targets:
      - localhost:9093
    scheme: http
    timeout: 10s

# fichier de règles pour l'alerting, c'est dans ce fichier que sont les définitions des alertes

rule_files:
  - "/alertmanager/alert.rules/alerts.rules.yml"

# la scrape configuration de prometheus, les hosts qu'il va contacter pour chercher les métrique
scrape_configs:

  - job_name: 'users route'     # <-- j'ai mis ce titre de job mais le truc c'est de mettre un nom de job explicite
    static_configs:
      - targets: ['127.0.0.1:5432']
    scrape_interval: 5s

  - web:
    cors_allowed_origins:
    - "http://localhost:3000"
    

    ### configuration de blackbox, notre probe http 

  - job_name: 'blackbox'
    metrics_path: /probe
    params:
      module: [http_2xx]  # Look for a HTTP 200 response.
    relabel_configs:
      - source_labels: [__address__]
        regex: ([^,]*),(.*)                   # <-- ici on fait une regex pour tagger nos urls avec une virgule
        replacement: $1
        target_label: __param_target
      - source_labels: [__address__]
        target_label: instance
      - target_label: __address__
        replacement: localhost:9115  # The blackbox exporter's real hostname:port.

    static_configs:
      - targets: 
        - http://localhost:9090,prometheus