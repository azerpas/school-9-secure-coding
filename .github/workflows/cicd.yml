name: Docker Image CI

on:
  push:
    branches: [ "school-9-devops-deploy-test" ]
  pull_request:
    branches: [ "school-9-devops-deploy-test" ]

env:
  PROJECT_ID: single-shadow-375115 # TODO: update Google Cloud project id
  SERVICE: YOUR_SERVICE_NAME # TODO: update Cloud Run service name
  POSTGRES_PORT: 5432
  POSTGRES_USER: postgres
  POSTGRES_HOST: postgres
  POSTGRES_DB: securecoding
  POSTGRES_PASSWORD: root

jobs:
  # unit-tests:
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: tp
  #   environment: DATABASE_TEST
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Use Node.js 18.x
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18.x
  #         cache: 'npm'
  #         cache-dependency-path: 'tp/package-lock.json'
  #     - run: npm ci
  #     - name: Run Docker Compose to init Postgres containers
  #       run: docker-compose up -d
  #     - run: npm run test
  #       env:
  #         POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
  #         POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
  #         POSTGRES_TEST_PORT: ${{ secrets.POSTGRES_TEST_PORT }}
  #         POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  #         POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
  #         POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  # build:
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: tp
  #   needs: unit-tests
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Get current date
  #       id: date
  #       run: echo "::set-output name=date::$(date +'%Y-%m-%dT%H%M%S')"
  #     - name: Build the Docker image
  #       run: docker build . --file Dockerfile --tag azerpas/school-9-secure-coding:${{ steps.date.outputs.date }}
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ vars.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     - name: Push the Docker image to Hub Registery
  #       run: docker push azerpas/school-9-secure-coding:${{ steps.date.outputs.date }}
  deploy-db:
      # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: tp
    # needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Google Auth
        id: auth
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"
          project_id: "${{ env.PROJECT_ID }}"
          
      - name: Configure Docker
        run: gcloud auth configure-docker --quiet

      - name: pull image from docker hub
        run: docker pull postgres
      - name: tag image
        run: docker tag postgres gcr.io/single-shadow-375115/postgres
      - name: push to registry
        run: docker push gcr.io/single-shadow-375115/postgres
      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: "service"
          image: gcr.io/single-shadow-375115/postgres
          port: ${{ env.POSTGRES_PORT }}
          flags: "--set-env-vars=POSTGRES_PASSWORD=${{ env.POSTGRES_PASSWORD }},POSTGRES_USER=${{ env.POSTGRES_USER }},POSTGRES_DB=${{ env.POSTGRES_DB }}"

        # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
  # deploy:
  #     # Add 'id-token' with the intended permissions for workload identity federation
  #   permissions:
  #     contents: "read"
  #     id-token: "write"
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: tp
  #   # needs: build
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Google Auth
  #       id: auth
  #       uses: "google-github-actions/auth@v0"
  #       with:
  #         credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"
  #         project_id: "${{ env.PROJECT_ID }}"
          
  #     - name: Configure Docker
  #       run: gcloud auth configure-docker --quiet

  #     - name: pull image from docker hub
  #       run: docker pull azerpas/school-9-secure-coding:2023-02-08T144624
  #     - name: tag image
  #       run: docker tag azerpas/school-9-secure-coding:2023-02-08T144624 gcr.io/single-shadow-375115/azerpas/school-9-secure-coding:2023-02-08T144624
  #     - name: push to registry
  #       run: docker push gcr.io/single-shadow-375115/azerpas/school-9-secure-coding:2023-02-08T144624
  #     - name: Deploy to Cloud Run
  #       id: deploy
  #       uses: google-github-actions/deploy-cloudrun@v0
  #       with:
  #         service: "service"
  #         image: gcr.io/single-shadow-375115/azerpas/school-9-secure-coding:2023-02-08T144624

  #       # If required, use the Cloud Run url output in later steps
  #     - name: Show Output
  #       run: echo ${{ steps.deploy.outputs.url }}
